syntax = "proto3";

package com.sleepkqq.sololeveling.proto.usertask;

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "com.sleepkqq.sololeveling.proto.usertask";
option java_outer_classname = "UserProto";

service UserService {
  rpc getUserInfo (GetUserInfoRequest) returns (GetUserInfoResponse);
  rpc authUser (AuthUserRequest) returns (AuthUserResponse);
  rpc getPlayerInfo (GetPlayerInfoRequest) returns (GetPlayerInfoResponse);
  rpc getCurrentTasks (GetCurrentTasksRequest) returns (GetCurrentTasksResponse);
}

// models
enum UserRole {
  USER = 0;
  ADMIN = 1;
}

message UserInfo {
  int64 id = 1;
  string username = 2;
  string firstName = 3;
  string lastName = 4;
  string photoUrl = 5;
  string locale = 6;
  repeated UserRole role = 7;
}

enum TaskRarity {
  COMMON = 0;
  UNCOMMON = 1;
  RARE = 2;
  EPIC = 3;
  LEGENDARY = 4;
}

enum TaskTopic {
  PHYSICAL_ACTIVITY = 0;
  MENTAL_HEALTH = 1;
  EDUCATION = 2;
  CREATIVITY = 3;
  SOCIAL_SKILLS = 4;
  HEALTHY_EATING = 5;
  PRODUCTIVITY = 6;
  EXPERIMENTS = 7;
  ECOLOGY = 8;
  TEAMWORK = 9;
}

message TaskInfo {
  string id = 1;
  string title = 2;
  string description = 3;
  int32 experience = 4;
  TaskRarity rarity = 5;
  repeated TaskTopic topic = 6;
  int32 agility = 7;
  int32 strength = 8;
  int32 intelligence = 9;
}

message PlayerInfo {
  int64 id = 1;
  int32 maxTasks = 2;
  repeated TaskTopic taskTopic = 3;
}

enum PlayerTaskStatus {
  PREPARING = 0;
  IN_PROGRESS = 1;
  PENDING_COMPLETION = 2;
  COMPLETED = 3;
  SKIPPED = 4;
}

message PlayerTaskInfo {
  string id = 1;
  TaskInfo taskInfo = 2;
  PlayerTaskStatus status = 3;
  google.protobuf.Timestamp createdAt = 4;
  google.protobuf.Timestamp closedAt = 5;
}

// requests and responses
message GetUserInfoRequest {
  int64 userId = 1;
}

message GetUserInfoResponse {
  UserInfo userInfo = 1;
  bool success = 2;
}

message AuthUserRequest {
  UserInfo userInfo = 1;
}

message AuthUserResponse {
  bool success = 1;
}

message GetPlayerInfoRequest {
  int64 playerId = 1;
}

message GetPlayerInfoResponse {
  PlayerInfo playerInfo = 1;
  bool success = 2;
}

message GetCurrentTasksRequest {
  int64 playerId = 1;
}

message GetCurrentTasksResponse {
  repeated PlayerTaskInfo currentTask = 1;
  bool success = 2;
}